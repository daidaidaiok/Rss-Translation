<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：编程</title>
    <link>https://www.reddit.com/r/programming/new</link>
    <description>计算机编程</description>
    <lastBuildDate>Mon, 21 Oct 2024 00:23:51 GMT</lastBuildDate>
    <item>
      <title>技术栈对决：我的项目中的全栈网站与 Web 应用程序</title>
      <link>https://www.reddit.com/r/programming/comments/1g8cwcd/tech_stack_showdown_full_stack_website_vs_web_app/</link>
      <description><![CDATA[我目前正处于构建基于 Web 的产品的初始阶段，我正在尝试确定最佳路线。  我已经准备好了线框，但尚未开始制作原型，因为我不确定采用全栈网站或 Web 应用程序的路线是否更有意义。我对 html、css 有一些有限的经验，并且之前曾使用过 squarespace 和 carrd 等网站来构建多个网站。  这款产品作为应用程序可能会“更好”，但很难说它是否会有更多的用途（尤其是当我认为 Web 应用程序路线的成本可能是动态网站的 2.5 倍，并且具有我们无限期需要的功能）。我的直觉告诉我，先走网站路线，然后再构建应用程序（如果需要）更有意义。 第一步是原型/MVP，我陷入困境，因为我不想在应该使用的平台上走错路，或者在当地（美国）或国外招聘更有价值。已经考虑过 Figma 或 Webflow 作为原型。 以下是一些“必须具备”的功能。以后还有很多“好东西”。 功能 •用户登录 •两组用户的匹配功能 •根据帐户设置信息匹配用户的标签 •用于与产品交互的基于积分的系统 •购买积分或订阅其他服务的能力 •测试以确认用户已在 YouTube 上观看了教育视频 •可能使用 2FA •速度也是一个因素 我从头开始构建网站时的初步研究似乎指向 React 与 Node.js、Redux 和 MongoDB（或 GraphQL）的组合，但我不知道这种组合是否真的可以一起工作。我也不知道从头开始构建是否有意义。 如果有人有任何经验可以分享，将不胜感激。没有错误的回应——一切都有帮助！    提交人    /u/Formal_Experience674   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g8cwcd/tech_stack_showdown_full_stack_website_vs_web_app/</guid>
      <pubDate>Mon, 21 Oct 2024 00:07:32 GMT</pubDate>
    </item>
    <item>
      <title>Chrome DevTools 中引入 AI 辅助功能</title>
      <link>https://www.reddit.com/r/programming/comments/1g870tv/introducing_ai_assistance_in_chrome_devtools/</link>
      <description><![CDATA[  由    /u/feross  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g870tv/introducing_ai_assistance_in_chrome_devtools/</guid>
      <pubDate>Sun, 20 Oct 2024 19:36:29 GMT</pubDate>
    </item>
    <item>
      <title>使用 Python 和 OpenCV 轻松检测硬币</title>
      <link>https://www.reddit.com/r/programming/comments/1g86uxo/easy_coin_detection_with_python_and_opencv/</link>
      <description><![CDATA[  由    /u/Feitgemel  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g86uxo/easy_coin_detection_with_python_and_opencv/</guid>
      <pubDate>Sun, 20 Oct 2024 19:29:28 GMT</pubDate>
    </item>
    <item>
      <title>C++ 帝国以“安全 C++”蓝图进行反击：“在遭受内存安全棒两年的打击后，C++ 社区发布了一项提案，以帮助开发人员编写更不容易受到攻击的代码。”</title>
      <link>https://www.reddit.com/r/programming/comments/1g85xbs/the_empire_of_c_strikes_back_with_safe_c/</link>
      <description><![CDATA[  由    /u/fchung  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g85xbs/the_empire_of_c_strikes_back_with_safe_c/</guid>
      <pubDate>Sun, 20 Oct 2024 18:49:19 GMT</pubDate>
    </item>
    <item>
      <title>AJAX 框架比较总结</title>
      <link>https://www.reddit.com/r/programming/comments/1g85ume/summary_of_the_ajax_frameworks_comparison/</link>
      <description><![CDATA[  由    /u/nfrankel  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g85ume/summary_of_the_ajax_frameworks_comparison/</guid>
      <pubDate>Sun, 20 Oct 2024 18:46:09 GMT</pubDate>
    </item>
    <item>
      <title>不要开始编码：最好的软件工程师首先要学习帕金森定律、人为的最后期限和逆向工作计划</title>
      <link>https://www.reddit.com/r/programming/comments/1g85i32/dont_start_coding_yet_the_best_software_engineers/</link>
      <description><![CDATA[  由    /u/strategizeyourcareer  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g85i32/dont_start_coding_yet_the_best_software_engineers/</guid>
      <pubDate>Sun, 20 Oct 2024 18:31:28 GMT</pubDate>
    </item>
    <item>
      <title>本周的 JavaScript 新闻：JS 可能会分为两种语言、Node.js 23、Next.js 15 RC2 等。</title>
      <link>https://www.reddit.com/r/programming/comments/1g83j79/this_weeks_javascript_news_js_might_split_into_2/</link>
      <description><![CDATA[  由    /u/ThisWeekinJavaScript  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g83j79/this_weeks_javascript_news_js_might_split_into_2/</guid>
      <pubDate>Sun, 20 Oct 2024 17:06:38 GMT</pubDate>
    </item>
    <item>
      <title>如何实现分布式锁定（2016）</title>
      <link>https://www.reddit.com/r/programming/comments/1g83a6s/how_to_do_distributed_locking_2016/</link>
      <description><![CDATA[  由    /u/yusufaytas  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g83a6s/how_to_do_distributed_locking_2016/</guid>
      <pubDate>Sun, 20 Oct 2024 16:56:00 GMT</pubDate>
    </item>
    <item>
      <title>样板：使用 go-lang 的视频服务器</title>
      <link>https://www.reddit.com/r/programming/comments/1g835tz/boilerplate_video_server_using_golang/</link>
      <description><![CDATA[  由    /u/Sensitive_Ad8262  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g835tz/boilerplate_video_server_using_golang/</guid>
      <pubDate>Sun, 20 Oct 2024 16:50:42 GMT</pubDate>
    </item>
    <item>
      <title>如何使用工程指标来衡量工程师和团队的成功</title>
      <link>https://www.reddit.com/r/programming/comments/1g82963/how_to_use_engineering_metrics_for_the_success_of/</link>
      <description><![CDATA[  由    /u/gregorojstersek  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g82963/how_to_use_engineering_metrics_for_the_success_of/</guid>
      <pubDate>Sun, 20 Oct 2024 16:11:44 GMT</pubDate>
    </item>
    <item>
      <title>软件工程师的头衔几乎已经失去了所有意义</title>
      <link>https://www.reddit.com/r/programming/comments/1g823xn/software_engineer_titles_have_almost_lost_all/</link>
      <description><![CDATA[  由    /u/suckaturdnow  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g823xn/software_engineer_titles_have_almost_lost_all/</guid>
      <pubDate>Sun, 20 Oct 2024 16:05:27 GMT</pubDate>
    </item>
    <item>
      <title>系统设计专家指导的 3 个成功软件迁移计划步骤</title>
      <link>https://www.reddit.com/r/programming/comments/1g81ql9/3_steps_for_a_successful_software_migration_plan/</link>
      <description><![CDATA[  由    /u/xxjcutlerxx  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g81ql9/3_steps_for_a_successful_software_migration_plan/</guid>
      <pubDate>Sun, 20 Oct 2024 15:49:27 GMT</pubDate>
    </item>
    <item>
      <title>SMURF：超越测试金字塔</title>
      <link>https://www.reddit.com/r/programming/comments/1g7z90g/smurf_beyond_the_test_pyramid/</link>
      <description><![CDATA[  由    /u/codingindoc  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g7z90g/smurf_beyond_the_test_pyramid/</guid>
      <pubDate>Sun, 20 Oct 2024 13:55:25 GMT</pubDate>
    </item>
    <item>
      <title>REST API 25 岁了：它们的诞生以及未来的发展方向</title>
      <link>https://www.reddit.com/r/programming/comments/1g7yi6i/rest_apis_turn_25_how_they_came_to_be_and_what/</link>
      <description><![CDATA[  由    /u/shrsv  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g7yi6i/rest_apis_turn_25_how_they_came_to_be_and_what/</guid>
      <pubDate>Sun, 20 Oct 2024 13:18:22 GMT</pubDate>
    </item>
    <item>
      <title>如何使用函数图表示单变量函数</title>
      <link>https://www.reddit.com/r/programming/comments/1g7y127/how_to_represent_singlevariable_functions_using/</link>
      <description><![CDATA[  由    /u/albeXL  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/programming/comments/1g7y127/how_to_represent_singlevariable_functions_using/</guid>
      <pubDate>Sun, 20 Oct 2024 12:53:57 GMT</pubDate>
    </item>
    </channel>
</rss>